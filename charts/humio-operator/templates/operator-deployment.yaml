apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    productID: "none"
    productName: "humio-operator"
    productVersion: {{ .Values.operator.image.tag | quote }}
  labels:
    {{- include "humio.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: '{{ .Chart.Name }}'
      app.kubernetes.io/name: '{{ .Chart.Name }}'
      app.kubernetes.io/instance: '{{ .Release.Name }}'
  template:
    metadata:
      annotations:
        productID: "none"
        productName: "humio-operator"
        productVersion: {{ .Values.operator.image.tag | quote }}
{{- if .Values.operator.podAnnotations }}
        {{- toYaml .Values.operator.podAnnotations | nindent 8 }}
{{- end }}
      labels:
        {{- include "humio.labels" . | nindent 8 }}
    spec:
{{- with .Values.operator.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.operator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.operator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.operator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
{{- end }}
      serviceAccountName: {{ .Release.Name }}
      containers:
      - name: humio-operator
        image: {{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag }}
        imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          value: {{ .Values.operator.watchNamespaces | join "," | quote }}
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: "humio-operator"
        - name: USE_CERTMANAGER
          value: {{ .Values.certmanager | quote }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8080
        readinessProbe:
          httpGet:
            path: /metrics
            port: 8080
      - name: {{ .Values.sidecarContainer.name }}
        image: {{ .Values.sidecarContainer.image }}
        imagePullPolicy: IfNotPresent
        command:
        - sleep
        - "3600"
        resources:
          limits:
            cpu: 10m
            memory: 10Mi
          requests:
            cpu: 10m
            memory: 10Mi
{{- with .Values.operator.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
{{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          capabilities:
            drop:
            - ALL
