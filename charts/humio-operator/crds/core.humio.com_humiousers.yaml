---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
  name: humiousers.core.humio.com
  labels:
    app: 'humio-operator'
    app.kubernetes.io/name: 'humio-operator'
    app.kubernetes.io/instance: 'humio-operator'
    app.kubernetes.io/managed-by: 'Helm'
    helm.sh/chart: 'humio-operator-0.31.0'
spec:
  group: core.humio.com
  names:
    kind: HumioUser
    listKind: HumioUserList
    plural: humiousers
    singular: humiouser
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HumioUser is the Schema for the humiousers API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: HumioUserSpec defines the desired state of HumioUser.
            properties:
              externalClusterName:
                description: |-
                  ExternalClusterName refers to an object of type HumioExternalCluster where the Humio resources should be created.
                  This conflicts with ManagedClusterName.
                minLength: 1
                type: string
              isRoot:
                description: |-
                  IsRoot toggles whether the user should be marked as a root user or not.
                  If explicitly set by the user, the value will be enforced, otherwise the root state of a user will be ignored.
                  Updating the root status of a user requires elevated privileges. When using ExternalClusterName it is important
                  to ensure the API token for the ExternalClusterName is one such privileged API token.
                  When using ManagedClusterName the API token should already be one such privileged API token that allows managing
                  the root status of users.
                type: boolean
              managedClusterName:
                description: |-
                  ManagedClusterName refers to an object of type HumioCluster that is managed by the operator where the Humio
                  resources should be created.
                  This conflicts with ExternalClusterName.
                minLength: 1
                type: string
              userName:
                description: UserName defines the username for the LogScale user.
                minLength: 1
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
            required:
            - userName
            type: object
            x-kubernetes-validations:
            - message: Must specify exactly one of managedClusterName or externalClusterName
              rule: (has(self.managedClusterName) && self.managedClusterName != "")
                != (has(self.externalClusterName) && self.externalClusterName != "")
          status:
            description: HumioUserStatus defines the observed state of HumioUser.
            properties:
              state:
                description: State reflects the current state of the HumioParser
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
