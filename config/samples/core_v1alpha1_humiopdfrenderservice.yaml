apiVersion: core.humio.com/v1alpha1
kind: HumioPdfRenderService
metadata:
  name: pdf-render-service
  namespace: logging
spec:
  # Required fields
  image: humio/pdf-render-service:0.1.2--build-104--sha-9a7598de95bb9775b6f59d874c37a206713bae01
  replicas: 2
  # Port configuration
  port: 5123
  serviceType: ClusterIP
  # Environment variables
  environmentVariables:
    - name: XDG_CONFIG_HOME
      value: /tmp/.chromium-config
    - name: XDG_CACHE_HOME
      value: /tmp/.chromium-cache
    - name: DEBUG
      value: "true"
    - name: LOG_LEVEL
      value: "debug"
    - name: CLEANUP_INTERVAL
      value: "600"
    - name: PORT
      value: "5123"
    - name: SERVICE_VERSION
      value: 0.0.60--build-101--sha-fe87a59c82fd957ec460190a3f726948d586c1ea
    # TLS Configuration
    - name: TLS_ENABLED
      value: "false"
    # Uncomment and configure the following if TLS_ENABLED=true
    # - name: TLS_CERT_PATH
    #   value: "/path/to/tls.crt"
    # - name: TLS_KEY_PATH
    #   value: "/path/to/tls.key"
    # - name: TLS_CA_PATH
    #   value: "/path/to/ca.crt"

  # Resource requirements
  resources:
    limits:
      cpu: "1"
      memory: "2Gi"
    requests:
      cpu: "1"
      memory: "1Gi"
  # Readiness probe configuration
  readinessProbe:
    httpGet:
      path: /ready
      port: 5123
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 60
    failureThreshold: 1
    successThreshold: 1
  # Liveness probe configuration
  livenessProbe:
    httpGet:
      path: /health
      port: 5123
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 60
    failureThreshold: 5
    successThreshold: 1
  # Node affinity configuration
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: humio_node_type
            operator: In
            values:
            - core
  # Add annotations for service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "5123"
  # Volume mounts for the container
  volumeMounts:
    - name: app-temp
      mountPath: /app/temp
    - name: tmp
      mountPath: /tmp
  # Volumes for the pod
  volumes:
    - name: app-temp
      emptyDir:
        medium: Memory
    - name: tmp
      emptyDir:
        medium: Memory
  # Container security context
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    privileged: false
    readOnlyRootFilesystem: true
    runAsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000
  # Pod security context (empty in the example)
  podSecurityContext: {}