on:
  push:
    tags:
      - 'v*'
name: Publish Release
jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: humio-operator
    - uses: actions/checkout@v2
      with:
        repository: operator-framework/operator-marketplace
        path: operator-marketplace
    - uses: actions/checkout@v2
      with:
        repository: operator-framework/operator-courier
        path: operator-courier
    - uses: actions/checkout@v2
      with:
        repository: operator-framework/operator-lifecycle-manager
        path: operator-lifecycle-manager
    - name: operator-sdk lint
      env:
        GO111MODULE: "on"
      uses: ./humio-operator/.github/action/operator-sdk
      with:
        args: operator-courier verify --ui_validate_io humio-operator/
    - name: Get release version
      id: get_version
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
    - name: quay.io login
      env:
        QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
        QUAY_ACCESS_TOKEN: ${{ secrets.QUAY_ACCESS_TOKEN }}
        QUAY_NAMESPACE: ${{ secrets.QUAY_NAMESPACE }}
      run:  docker login -u $QUAY_USERNAME -p $QUAY_ACCESS_TOKEN
    - name: operator-sdk build
      env:
        GO111MODULE: "on"
      uses: ./humio-operator/.github/action/operator-sdk
      with:
        args: operator-sdk build -f humio-operator/Dockerfile quay.io/humio/humio-operator:${{ env.RELEASE_VERRSION }}
    - name: docker push
      run:  docker push quay.io/humio/humio-operator:${{ env.RELEASE_VERSION }}
    - name: operator-courier push
      env:
        GO111MODULE: "on"
      uses: ./humio-operator/.github/action/operator-sdk
      with:
        args: operator-courier push humio-operator ${{ env.QUAY_NAMESPACE }} humio-operator ${{ env.RELEASE_VERRSION }} ${{ env.QUAY_ACCESS_TOKEN }}
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get release version
        id: get_version
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
      - uses: actions/create-release@latest
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          body: Release ${{ env.RELEASE_VERSION }}
          prerelease: true
