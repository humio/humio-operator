on:
  push:
    branches:
    - master
    paths:
    - VERSION
name: Publish Container Image Release
jobs:
  build-and-publish:
    name: Test, Build and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set version information
      run: |
        echo "RELEASE_VERSION=$(cat VERSION)" >> $GITHUB_ENV
        echo "RELEASE_COMMIT=$(git rev-parse --verify HEAD)" >> $GITHUB_ENV
        echo "RELEASE_DATE=$(date --iso-8601=seconds)" >> $GITHUB_ENV
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build but don't push
      uses: docker/build-push-action@v5
      with:
        context: .
        # Because we use a container scanner pre-push we don't specify platform here so only the runner platform builds
        # platforms: linux/amd64,linux/arm64
        load: true
        tags: ${{ github.repository_owner }}/humio-operator:${{ env.RELEASE_VERSION }}
        labels: |
          version=${{ env.RELEASE_VERSION }}
          release=${{ github.run_id }}
        build-args: |
            RELEASE_VERSION=${{ env.RELEASE_VERSION }}
            RELEASE_COMMIT=${{ env.RELEASE_COMMIT }}
            RELEASE_DATE=${{ env.RELEASE_DATE }}
        cache-to: type=local,type=registry,type=gha
    - name: Set up Python
      uses: actions/setup-python@v5
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install six
        python -m pip install --upgrade retry
        pip install retry
    - name: CrowdStrike Container Image Scan Operator
      if: github.repository_owner == 'humio'
      uses: crowdstrike/container-image-scan-action@v1
      with:
        falcon_client_id: 1cd30708cb31442f85a6eec83279fe7b
        container_repository: ${{ github.repository_owner }}/humio-operator
        container_tag: ${{ env.RELEASE_VERSION }}
      env:
        FALCON_CLIENT_SECRET: "${{ secrets.FALCON_CLIENT_SECRET }}"
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ github.repository_owner }}/humio-operator:${{ env.RELEASE_VERSION }}
        labels: |
          version=${{ env.RELEASE_VERSION }}
          release=${{ github.run_id }}
        build-args: |
          RELEASE_VERSION=${{ env.RELEASE_VERSION }}
          RELEASE_COMMIT=${{ env.RELEASE_COMMIT }}
          RELEASE_DATE=${{ env.RELEASE_DATE }}
        cache-from: type=gha, mode=max
        cache-to: type=gha
  gh-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Get release version
        run: echo "RELEASE_VERSION=$(cat VERSION)" >> $GITHUB_ENV
      - uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: operator-${{ env.RELEASE_VERSION }}
          release_name: Operator Release ${{ env.RELEASE_VERSION }}
          body: |
            **Image:** `${{ github.repository_owner }}/humio-operator:${{ env.RELEASE_VERSION }}`
            **Upgrade notes:** https://library.humio.com/falcon-logscale-self-hosted/installation-kubernetes-operator-upgrade.html#installation-containers-kubernetes-operator-upgrade-notes
          prerelease: true
