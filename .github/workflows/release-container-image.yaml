on:
  push:
    branches:
    - master
    paths:
    - version/version.go
name: Publish Container Image Release
jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get release version
      id: get_version
      run: echo ::set-env name=RELEASE_VERSION::$(grep "Version =" version/version.go | awk -F'"' '{print $2}')
    - name: docker login
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run:  echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
    - name: operator-sdk build
      env:
        GO111MODULE: "on"
      uses: ./.github/action/operator-sdk
      with:
        args: operator-sdk build --image-build-args "--label version=${{ env.RELEASE_VERSION }} --label release=${{github.run_id}}" humio/humio-operator:${{ env.RELEASE_VERSION }}
    - name: docker push
      run:  docker push humio/humio-operator:${{ env.RELEASE_VERSION }}
    - name: redhat scan login
      env:
        RH_SCAN_KEY: ${{ secrets.RH_SCAN_HUMIO_OPERATOR_KEY }}
        RH_SCAN_OSPID: ${{ secrets.RH_SCAN_HUMIO_OPERATOR_OSPID }}
      run:  echo $RH_SCAN_KEY | docker login -u unused scan.connect.redhat.com --password-stdin
    - name: redhat scan tag
      run: docker tag humio/humio-operator:${{ env.RELEASE_VERSION }} scan.connect.redhat.com/${{ env.RH_SCAN_OSPID }}/humio-operator:${{ env.RELEASE_VERSION }}
    - name: redhat scan push
      run: docker push scan.connect.redhat.com/${{ env.RH_SCAN_OPSID }}/humio-operator:${{ env.RELEASE_VERSION }}
    - name: operator-courier push
      env:
        GO111MODULE: "on"
        QUAY_ACCESS_TOKEN: ${{ secrets.QUAY_ACCESS_TOKEN }}
        QUAY_NAMESPACE: ${{ secrets.QUAY_NAMESPACE }}
      uses: ./.github/action/operator-sdk
      with:
        args: operator-courier push deploy/olm-catalog/humio-operator ${{ env.QUAY_NAMESPACE }} humio-operator ${{ env.RELEASE_VERSION }} "basic ${{ env.QUAY_ACCESS_TOKEN }}"
  gh-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get release version
        id: get_version
        run: echo ::set-env name=RELEASE_VERSION::$(grep "Version =" version/version.go | awk -F'"' '{print $2}')
      - uses: actions/create-release@latest
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: operator-${{ env.RELEASE_VERSION }}
          release_name: Operator Release ${{ env.RELEASE_VERSION }}
          body: |
            **Image:** `humio/humio-operator:${{ env.RELEASE_VERSION }}`
          prerelease: true
